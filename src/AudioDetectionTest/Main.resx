<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACQAwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAgAAAAIAgGAAAAc3p69AAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAADJUlEQVRYR8WXz0tU
        URTHz73aOI6mSS0GkgiiReJiEIzcNBBuNFqE/ZTIhS2C/oB+4CZCIihoFe5sSNzWgP3AhSkFJSFlmwYq
        qBCZhVDW6Ggz807nnHdn8unzzY8m5wNy7vv63txz3z333u9TUATt3X0hRKsHULWCwiBJ/AeIaoF+KI4K
        Y4AQnXn24CXrhZA3gXC4z58IWFfo1n66udnI3iAsUDL30z49OBuN/DCqK54JtHWdv6AQbyilZKRFg0id
        q8G65Ne7U1NTaaM6cE2gJXyyPhDwD9O/TxjpX5mkQZx98yQSN9c5NiRA8xy0LOspPRAyUpnAL5jRXTPj
        kZgRBEcCPPLaWv+L8ndugwBzWqn2tW9Cmyjwa8/Xub/GBxd7j0osFi5iWkUPw+FwtZH+JsAFV8ic1wX8
        EDqwT2JpqEOJwJ4Bc2EnwEuNq12UEmkO7jKtgrjMtcYNSYDXudtSq66uglPdhyV6saOhHgYu9UosBAXK
        j5YlAzZToPrt6KRxex0c6QhJ9KKqyv6ZbCwEVHCOi17z9srFYfSy0tHWAlq7J8VvoTZQ06llb/8P7Gxq
        gL7jndDU6DUtqkfLwVIpEFq1OdUqRZAnqGIJ8MrTCCq3K1UCqgHYcEJtGeQbNC3BiiVAh1Nci42qEIr6
        5imImuuy8n0xAWMT07D4a8koLqCKajGQNBdGKolUKg3pdEZiFjI1MPZ8WnQ36PWnUzVqTPZJ2pdHRF3H
        0vIKvPvwWaIXPxPLcO3OsMRCUYCP2LBKAmmfum4bSCcrq79haPSxxHwU0zmPPpPBq9yWBDgTEm9xeysg
        7zH0dnzkE7dzR1V98tttCpP21eYkk6swF1+QWBoYW06uyOgZhylll0Kn4yuS9xqpvNA0o6U71jrj3Btg
        2K2ydWb3aqTywZ0DHFtvyx0JMHwDW2d64rWRygDGZOQu34yuZm/+42xi/+6mSGpbIx1WcJDcS0kHFlc7
        Fdw9mvPT7ydG543swFEDbth1gTcR8AzbKCN7Ih3TOuellq32zcibQBb5aiIPR4/Q5zmwiwrmnDR/DdPB
        wns7b6+8w+X7KrYB+AOeSzw2yYJO9AAAAABJRU5ErkJggg==
</value>
  </data>
</root>